<?php

namespace IB\ArticleBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr\Select;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
  private function count()
  {
    return $this->createQueryBuilder('a')
                ->select('COUNT(a)')
                ->add('where', 'a.publier = 1')
                ->getQuery()
                ->getSingleScalarResult();
  }

  public function getArticles($menu)
  {
        $qb = $this->CreateQueryBuilder('a')
        ->innerJoin('a.account', 'u')
        ->addSelect('partial u.{id, username}')
        ->innerJoin('u.avatar', 'av')
        ->addSelect('av')
        ->innerJoin('a.menus', 'm')
        ->add('where', 'a.publier = 1 AND m.name = :name')
        ->orderBy('a.date', 'DESC')
        ->setParameter('name', $menu->getName());
        
        return $qb->getQuery()->setHint('knp_paginator.count', $this->count());
  }

  public function getListArticles($limit)
  {
      $qb = $this->createQueryBuilder('a')
      ->innerJoin('a.account', 'u')
      ->addSelect('partial u.{id, username}')
      ->innerJoin('u.avatar', 'avatar')
      ->addSelect('avatar')
      ->add('where', 'a.publier = 1')
      ->orderBy('a.date', 'DESC')
      ->setMaxResults($limit);

      return  $qb->getQuery()
                 ->getResult();
  }

  public function getArticleBySlug($slug)
  {
      $qb = $this->createQueryBuilder('a')
      ->innerJoin('a.account', 'user')
      ->addSelect('partial user.{id, username}')
      ->innerJoin('user.avatar', 'avatar')
      ->addSelect('avatar')
      ->add('where', 'a.slug = :slug AND a.publier = 1')
      ->setParameter('slug', $slug);

      return  $qb->getQuery()
                 ->getSingleResult();
  }
}